// <auto-generated />
using System;
using FitnessApp.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessApp.Api.Migrations
{
    [DbContext(typeof(FitnessAppDbContext))]
    [Migration("20250502090048_UpdateUserProfileForTargetWeight")]
    partial class UpdateUserProfileForTargetWeight
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("FitnessApp.Api.Models.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TrainingSessionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TrainingSessionId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("FitnessApp.Api.Models.ExerciseSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Repetitions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SetNumber")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("ExerciseSets");
                });

            modelBuilder.Entity("FitnessApp.Api.Models.NutritionalGoal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SetAt")
                        .HasColumnType("TEXT");

                    b.Property<double>("TargetCalories")
                        .HasColumnType("REAL");

                    b.Property<double>("TargetCarbohydrateGrams")
                        .HasColumnType("REAL");

                    b.Property<double>("TargetFatGrams")
                        .HasColumnType("REAL");

                    b.Property<double>("TargetProteinGrams")
                        .HasColumnType("REAL");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("NutritionalGoals");
                });

            modelBuilder.Entity("FitnessApp.Api.Models.TrainingSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TrainingSessions");
                });

            modelBuilder.Entity("FitnessApp.Api.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GoogleId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FitnessApp.Api.Models.UserProfile", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ActivityLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<double>("HeightCm")
                        .HasColumnType("REAL");

                    b.Property<double?>("TargetWeightKg")
                        .HasColumnType("REAL");

                    b.Property<double>("WeightKg")
                        .HasColumnType("REAL");

                    b.HasKey("UserId");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("FitnessApp.Api.Models.Exercise", b =>
                {
                    b.HasOne("FitnessApp.Api.Models.TrainingSession", "TrainingSession")
                        .WithMany("Exercises")
                        .HasForeignKey("TrainingSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingSession");
                });

            modelBuilder.Entity("FitnessApp.Api.Models.ExerciseSet", b =>
                {
                    b.HasOne("FitnessApp.Api.Models.Exercise", "Exercise")
                        .WithMany("Sets")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("FitnessApp.Api.Models.NutritionalGoal", b =>
                {
                    b.HasOne("FitnessApp.Api.Models.User", "User")
                        .WithOne("NutritionalGoal")
                        .HasForeignKey("FitnessApp.Api.Models.NutritionalGoal", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessApp.Api.Models.TrainingSession", b =>
                {
                    b.HasOne("FitnessApp.Api.Models.User", "User")
                        .WithMany("TrainingSessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessApp.Api.Models.UserProfile", b =>
                {
                    b.HasOne("FitnessApp.Api.Models.User", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("FitnessApp.Api.Models.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessApp.Api.Models.Exercise", b =>
                {
                    b.Navigation("Sets");
                });

            modelBuilder.Entity("FitnessApp.Api.Models.TrainingSession", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("FitnessApp.Api.Models.User", b =>
                {
                    b.Navigation("NutritionalGoal");

                    b.Navigation("TrainingSessions");

                    b.Navigation("UserProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
